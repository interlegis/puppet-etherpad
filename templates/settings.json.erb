/*
  This file must be valid JSON. But comments are allowed

  Please edit settings.json, not settings.json.template
*/
{
  // Name your instance!
  "title": "<%= @pagetitle %>",

  // favicon default name
  // alternatively, set up a fully specified Url to your own favicon
  "favicon": "favicon.ico",
  
  //IP and port which etherpad should bind at
  "ip": "<%= @ip %>",
  "port" : <%= @port %>,

  // Session Key, used for reconnecting user sessions
  // Set this to a secure string at least 10 characters long.  Do not share this value.
  "sessionKey" : "<%= @sessionkey %>",

  /*  
  // Node native SSL support
  // this is disabled by default
  //
  // make sure to have the minimum and correct file access permissions set
  // so that the Etherpad server can access them

  "ssl" : {
            "key"  : "/path-to-your/epl-server.key",
            "cert" : "/path-to-your/epl-server.crt"
          },

  */

  //The Type of the database. You can choose between dirty, postgres, sqlite and mysql
  //You shouldn't use "dirty" for for anything else than testing or development
  //"dbType" : "dirty",
  //the database specific settings
  //"dbSettings" : {
  //                 "filename" : "var/dirty.db"
  //               },

   "dbType" : "<%= @dbtype %>",
   "dbSettings" : {
                    "user"    : "<%= @dbuser %>", 
                    "host"    : "<%= @dbhost %>", 
                    "password": "<%= @dbpasswd %>", 
                    "database": "<%= @dbname %>"
                  },

  //the default text of a pad
  "defaultPadText" : "<%= @defaultPadText %>",
  
  /* Users must have a session to access pads. This effectively allows only group pads to be accessed. */
  "requireSession" : <%= @requireSession %>,

  /* Users may edit pads but not create new ones. Pad creation is only via the API. This applies both to group pads and regular pads. */
  "editOnly" : <%= @editOnly %>,
  
  /* if true, all css & js will be minified before sending to the client. This will improve the loading performance massivly, 
     but makes it impossible to debug the javascript/css */
  "minify" : <%= @minify %>,

  /* How long may clients use served javascript code (in seconds)? Without versioning this
     may cause problems during deployment. Set to 0 to disable caching */
  "maxAge" : <%= @maxAge %>,
  
  /* This is the path to the Abiword executable. Setting it to null, disables abiword.
     Abiword is needed to advanced import/export features of pads*/  
  "abiword" : "/usr/bin/abiword",
 
  /* This setting is used if you require authentication of all users.
     Note: /admin always requires authentication. */
  "requireAuthentication": <%= @requireAuthentication %>,

  /* Require authorization by a module, or a user with is_admin set, see below. */
  "requireAuthorization": <%= @requireAuthorization %>,

  /* Users for basic authentication. is_admin = true gives access to /admin.
     If you do not uncomment this, /admin will not be available! */
  "users": {
<% @users.each do |u| -%>
    "<%=u['name']%>": {
      "password": "<%=u['password']%>",
      "is_admin": <%=u['is_admin']%> 
    }
<% end -%>
  },

  // restrict socket.io transport methods
  "socketTransportProtocols" : ["xhr-polling", "jsonp-polling", "htmlfile"],
  
  /* The log level we are using, can be: DEBUG, INFO, WARN, ERROR */
  "loglevel": "<%=@loggingLevel%>",
  
  //Logging configuration. See log4js documentation for further information
  // https://github.com/nomiddlename/log4js-node
  // You can add as many appenders as you want here:
  "logconfig" :
	{ "appenders": [
	    { "type": "console" 
	    //, "category": "access"// only logs pad access
	    }
    /*
	  , { "type": "file"
      , "filename": "your-log-file-here.log"
      , "maxLogSize": 1024
      , "backups": 3 // how many log files there're gonna be at max
      //, "category": "test" // only log a specific category
      }*/
    /*
	  , { "type": "logLevelFilter"
	    , "level": "warn" // filters out all log messages that have a lower level than "error"
	    , "appender":
	      {  Use whatever appender you want here  }
      }*/
    /*
	  , { "type": "logLevelFilter"
	    , "level": "error" // filters out all log messages that have a lower level than "error"
	    , "appender":
	      { "type": "smtp"
        , "subject": "An error occured in your EPL instance!"
        , "recipients": "bar@blurdybloop.com, baz@blurdybloop.com"
        , "sendInterval": 60*5 // in secs -- will buffer log messages; set to 0 to send a mail for every message
        , "transport": "SMTP", "SMTP": { // see https://github.com/andris9/Nodemailer#possible-transport-methods
            "host": "smtp.example.com", "port": 465,
            "secureConnection": true,
            "auth": {
                "user": "foo@example.com",
                "pass": "bar_foo"
            }
        }
        }
      }*/
	] }
}
